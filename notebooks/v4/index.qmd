# List of notebooks

This section provides a list of the sample models provided in the `examples/` directory of the source code. 

The Jupyter notebooks can be downloaded from:

<https://github.com/ANNarchy/ANNarchy.github.io/tree/master/notebooks>

## Rate-coded networks

- [Echo-state networks](RC.ipynb): echo-state networks are the rate-coded version of reservoir computing (Jaeger, 2001).
- [Neural Field](NeuralField.ipynb): a simple rate-coded model without learning using neural fields.
- [BCM learning rule](BCM.ipynb): basic demonstration of the Intrator & Cooper BCM learning rule.
- [Bar learning](BarLearning.ipynb): an implementation of the bar learning problem, illustrating synaptic plasticity in rate-coded networks.
- [Miconi](Miconi.ipynb): Reward-modulated recurrent network based on Miconi (2017).
- [Structural Plasticity](StructuralPlasticity.ipynb): a dummy example demonstrating structural plasticity.

## Spiking networks

- [AdEx](AdEx.ipynb): how the AdEx neuron model (adaptive exponential) can reproduce various spiking patterns in vivo (Naud et al. 2008).
- [PyNN/Brian](PyNN.ipynb): a set of single neuron models reproducing various examples from [PyNN](https://neuralensemble.org/PyNN/) and [Brian](https://brian.readthedocs.io/).
- [Izhikevich](Izhikevich.ipynb): an implementation of the simple pulse-coupled network described in (Izhikevich, 2003). It shows how to build a simple spiking network without synaptic plasticity.
- [Gap Junctions](GapJunctions.ipynb): an example using gap junctions.
- [HodgkinHuxley](HodgkinHuxley.ipynb): a single Hodgkin-Huxley neuron.
- [COBA and CUBA](COBA.ipynb): an implementation of the balanced network described in (Vogels and Abbott, 2005). It shows how to build a simple spiking network using integrate-and-fire neurons and sparse connectivity.
- [STP](STP.ipynb): an example of short-term plasticity based on the model of Tsodyks, Uziel and Markram (2000). 
- [STDP I](STDP1.ipynb) and [II](STDP2.ipynb): two simple examples using spike-timing dependent plasticity (STDP).
- [Ramp](Ramp.ipynb): an example of homeostatic STDP based on the model of Carlson, Richert, Dutt and Krichmar (2013).
    
## Advanced features

-   [Hybrid networks](Hybrid.ipynb): a simple hybrid network with both rate-coded and spiking sub-parts.
-   [Parallel simulations](MultipleNetworks.ipynb): shows how to call `parallel_run` to run several networks in parallel.
-   [Bayesian optimization](BayesianOptimization.ipynb): a demo showing how to use `hyperopt` to search for hyperparameters of a  model.

## Extensions

-   [Image and Convolution](Image.ipynb): shows how to use the `ImagePopulation` class of the `image` extension to clamp directly images and video streams into a rate-coded network. Also demonstrates the `convolution` extension.
-   [Logging with tensorboard](BasalGanglia.ipynb): a simple basal ganglia model to show how to use the `tensorboard` extension.
-   [BOLD monitoring I](BoldMonitoring1.ipynb) and [II](BoldMonitoring2.ipynb): a showcase of the `bold` extension allowing to record BOLD signals fron a network.
-   [ANN2SNN I](ANN2SNN.ipynb) and [II](ANN2SNN2.ipynb): demonstrates the ANN-to-SNN conversion tool using the MNIST dataset for a MLP and a CNN.
