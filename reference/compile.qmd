# compile { #ANNarchy.generator.compile }

```python
compile(
    directory='annarchy',
    clean=False,
    compiler='default',
    compiler_flags='default',
    add_sources='',
    extra_libs='',
    cuda_config={'device': 0},
    annarchy_json='',
    silent=False,
    debug_build=False,
    trace_calls=None,
    profile_enabled=False,
    net_id=0,
)
```

This method uses the network architecture to generate optimized C++ code and compile a shared library that will perform the simulation.

The ``compiler``, ``compiler_flags`` and part of ``cuda_config`` take their default value from the configuration file ``~/.config/ANNarchy/annarchy.json``.

The following arguments are for internal development use only:

* **debug_build**: creates a debug version of ANNarchy, which logs the creation of objects and some other data (default: False).
* **trace_calls**: if set to *init*, *simulate*, or *both* simulation calls inside of the C++ kernel are logged to console (default: None)
* **profile_enabled**: creates a profilable version of ANNarchy, which logs several computation timings (default: False).

## Parameters {.doc-section .doc-section-parameters}

| Name           | Type   | Description                                                                                                                                     | Default         |
|----------------|--------|-------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|
| directory      |        | name of the subdirectory where the code will be generated and compiled. Default: "annarchy/".                                                   | `'annarchy'`    |
| clean          |        | boolean to specifying if the library should be recompiled entirely or only the changes since last compilation (default: False).                 | `False`         |
| compiler       |        | C++ compiler to use. Default: g++ on GNU/Linux, clang++ on OS X. Valid compilers are [g++, clang++].                                            | `'default'`     |
| compiler_flags |        | platform-specific flags to pass to the compiler. Defaults are defined in annarchy.json: "-march=native -O3".                                    | `'default'`     |
| cuda_config    |        | dictionary defining the CUDA configuration for each population and projection.                                                                  | `{'device': 0}` |
| annarchy_json  |        | compiler flags etc can be stored in a .json file normally placed in the home directory. With this flag one can directly assign a file location. | `''`            |
| silent         |        | defines if status message like "Compiling... OK" should be printed.                                                                             | `False`         |