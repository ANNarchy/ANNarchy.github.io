# Gamma { #ANNarchy.core.Random.Gamma }

```python
core.Random.Gamma(self, alpha, beta=1.0, min=None, max=None, seed=None)
```

Gamma distribution.

## Parameters {.doc-section .doc-section-parameters}

| Name   | Type   | Description                                                                                     | Default    |
|--------|--------|-------------------------------------------------------------------------------------------------|------------|
| alpha  | float  | Shape of the gamma distribution.                                                                | _required_ |
| beta   | float  | Scale of the gamma distribution.                                                                | `1.0`      |
| min    | float  | Minimum value returned (default: unlimited).                                                    | `None`     |
| max    | float  | Maximum value returned (default: unlimited).                                                    | `None`     |
| seed   | int    | (optional) seed for the random generator. If left None, the value set in `ann.setup()` is used. | `None`     |

## Methods

| Name | Description |
| --- | --- |
| [get_values](#ANNarchy.core.Random.Gamma.get_values) | Returns a Numpy array with the given shape. |

### get_values { #ANNarchy.core.Random.Gamma.get_values }

```python
core.Random.Gamma.get_values(shape)
```

Returns a Numpy array with the given shape.

#### Parameters {.doc-section .doc-section-parameters}

| Name   | Type   | Description         | Default    |
|--------|--------|---------------------|------------|
| shape  | tuple  | Shape of the array. | _required_ |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type       | Description   |
|--------|------------|---------------|
|        | np.ndarray | Array.        |