# population_rate { #ANNarchy.core.Monitor.population_rate }

`core.Monitor.population_rate(spikes, smooth=0.0)`

Takes the recorded spikes of a population and returns a smoothed firing rate for the population of recorded neurons.

This method is faster than calling ``smoothed_rate`` and then averaging.

The first axis is the neuron index, the second is time.

Example:

```python
m = ann.Monitor(P[:1000], 'spike')
ann.simulate(1000.0)
spikes = m.get('spike')
r = population_rate(smooth=100.)
```

## Parameters

| Name     | Type   | Description                                            | Default    |
|----------|--------|--------------------------------------------------------|------------|
| `spikes` | dict   | the dictionary of spikes returned by ``get('spike')``. | _required_ |
| `smooth` | float  | smoothing time constant. Default: 0.0 (no smoothing).  | `0.0`      |